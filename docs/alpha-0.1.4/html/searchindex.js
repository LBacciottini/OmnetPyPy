Search.setIndex({"docnames": ["index", "omnetpypy/backends/backends", "omnetpypy/backends/connector", "omnetpypy/backends/simpy_connector", "omnetpypy/examples/examples", "omnetpypy/examples/ping_pong/ping_pong", "omnetpypy/examples/ping_pong/ping_pong_simple", "omnetpypy/front_end/channel", "omnetpypy/front_end/compound_module", "omnetpypy/front_end/front_end", "omnetpypy/front_end/message", "omnetpypy/front_end/port", "omnetpypy/front_end/sim_entity", "omnetpypy/front_end/simple_module", "omnetpypy/parser", "omnetpypy/sim_log", "omnetpypy/simulation", "omnetpypy/utilities", "yaml_formats/channels", "yaml_formats/compound", "yaml_formats/configuration", "yaml_formats/network", "yaml_formats/simple", "yaml_formats/yaml_formats"], "filenames": ["index.rst", "omnetpypy/backends/backends.rst", "omnetpypy/backends/connector.rst", "omnetpypy/backends/simpy_connector.rst", "omnetpypy/examples/examples.rst", "omnetpypy/examples/ping_pong/ping_pong.rst", "omnetpypy/examples/ping_pong/ping_pong_simple.rst", "omnetpypy/front_end/channel.rst", "omnetpypy/front_end/compound_module.rst", "omnetpypy/front_end/front_end.rst", "omnetpypy/front_end/message.rst", "omnetpypy/front_end/port.rst", "omnetpypy/front_end/sim_entity.rst", "omnetpypy/front_end/simple_module.rst", "omnetpypy/parser.rst", "omnetpypy/sim_log.rst", "omnetpypy/simulation.rst", "omnetpypy/utilities.rst", "yaml_formats/channels.rst", "yaml_formats/compound.rst", "yaml_formats/configuration.rst", "yaml_formats/network.rst", "yaml_formats/simple.rst", "yaml_formats/yaml_formats.rst"], "titles": ["Welcome to omnetpypy docs (alpha-0.1.3)", "omnetpypy.backends", "omnetpypy.backends.connector", "omnetpypy.backends.simpy_connector", "omnetpypy.examples", "omnetpypy.examples.ping_pong", "omnetpypy.examples.ping_pong.ping_pong_simple", "omnetpypy.front_end.channel", "omnetpypy.front_end.compound_module", "omnetpypy.front_end", "omnetpypy.front_end.message", "omnetpypy.front_end.port", "omnetpypy.front_end.sim_entity", "omnetpypy.front_end.simple_module", "omnetpypy.parser", "omnetpypy.sim_log", "omnetpypy.simulation", "omnetpypy.utilities", "Channels YAML file", "Compound Modules YAML file", "Configuration YAML File", "Network YAML file", "Simple Modules YAML file", "Format and purpose of YAML files"], "terms": {"packag": [0, 1, 4, 9, 14, 17, 18, 22, 23], "document": [0, 20, 23], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23], "implement": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16], "python": [0, 19, 20, 23], "network": [0, 14, 16, 19, 23], "simul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23], "framework": 0, "discret": [0, 1], "event": [0, 1, 2, 16, 20], "inspir": 0, "concept": 0, "omnet": [0, 8, 11, 13], "you": [0, 21, 23], "can": [0, 4, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "download": 0, "instal": 0, "simpli": [0, 21], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23], "pip": 0, "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "aim": 0, "those": 0, "who": [0, 5, 6], "appreci": 0, "modular": 0, "structur": [0, 8, 9, 16, 19], "want": [0, 23], "": [0, 17, 19, 20, 21, 23], "simplic": 0, "flexibl": 0, "open": [0, 15], "sourc": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23], "code": 0, "github": 0, "everyon": 0, "contribut": 0, "project": 0, "main": [0, 9, 13, 20, 23], "player": 0, "within": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 19], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23], "follow": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23], "simpl": [0, 5, 9, 13, 14, 18, 19, 23], "modul": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 23], "These": [0, 16, 20], "basic": [0, 9, 13], "build": [0, 9, 13], "block": [0, 9, 13], "thei": [0, 7, 8, 9, 13, 19, 23], "entiti": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 20, 23], "interact": [0, 2], "each": [0, 1, 2, 5, 6, 11, 12, 16, 17, 18, 19, 20, 22, 23], "other": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 19, 20, 23], "send": [0, 5, 6, 7, 8, 9, 11, 12, 13], "messag": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 19], "process": [0, 1, 2, 5, 6, 7, 8, 9, 12, 13, 20, 23], "them": [0, 17, 18], "behavior": [0, 5, 6, 8, 9, 13, 23], "custom": [0, 5, 6, 7, 9, 13, 14, 18, 20, 23], "defin": [0, 1, 5, 6, 8, 9, 13, 14, 18, 19, 23], "user": [0, 1, 9, 13, 16, 18, 19], "its": [0, 1, 2, 8, 9, 13, 14, 15, 19, 23], "handle_messag": [0, 5, 6, 7, 8, 9, 12, 13], "method": [0, 5, 6, 7, 8, 9, 12, 13, 17, 19, 23], "compound": [0, 8, 9, 14, 21, 23], "non": [0, 8, 9, 17], "atom": [0, 8, 9], "contain": [0, 4, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "interconnect": [0, 23], "submodul": [0, 8, 9, 14, 19, 21, 23], "model": [0, 8, 9, 11, 13, 18, 19], "hierarch": [0, 8, 9], "wai": 0, "make": [0, 16], "complex": [0, 7, 9, 19], "system": [0, 20], "easier": 0, "fulli": [0, 14], "how": [0, 4, 8, 9, 13, 21, 23], "connect": [0, 1, 7, 8, 9, 11, 13, 14, 19, 21, 23], "port": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 19, 21, 23], "outsid": [0, 11], "world": [0, 11], "two": [0, 5, 7, 9, 11, 14, 19, 21], "differ": [0, 5, 6, 12, 17, 19, 20], "so": 0, "exchang": [0, 9, 10], "between": [0, 1, 5, 6, 7, 9, 10, 17, 19], "also": [0, 8, 9, 11, 13, 16, 19, 20], "forward": [0, 7, 8, 9, 11], "input": [0, 5, 6, 8, 9, 11, 12, 13], "output": [0, 1, 2, 8, 9, 11, 13, 15, 16, 17, 20, 23], "anoth": [0, 8, 9, 11, 13, 23], "crucial": [0, 20], "bind": 0, "channel": [0, 8, 9, 12, 13, 14, 19, 21, 23], "when": [0, 12, 14], "through": [0, 5, 6, 7, 8, 9, 13, 16, 19, 21], "commun": 0, "medium": 0, "media": 0, "wire": 0, "wireless": 0, "nois": [0, 7, 9], "delai": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 18, 19, 21, 23], "loss": [0, 7, 9, 18, 19], "oper": [0, 7, 9], "come": [0, 8, 9], "default": [0, 1, 2, 5, 6, 7, 9, 12, 15, 16, 17, 19, 20, 21, 23], "bidirect": [0, 18], "It": [0, 15, 16, 18, 19, 20, 21, 22], "support": [0, 1, 2, 16, 20, 23], "fix": [0, 18, 19], "probabl": [0, 7, 9, 17, 19], "time": [0, 1, 2, 5, 6, 8, 9, 12, 13, 15, 16, 17, 19, 20, 23], "advanc": [0, 7], "check": [0, 1, 2, 8, 9, 12], "out": [0, 7, 8, 9, 12, 23], "mini": 0, "tutori": 0, "setup": 0, "here": [0, 18, 19, 21, 22, 23], "find": 0, "detail": [0, 19, 23], "all": [0, 5, 6, 8, 9, 12, 14, 15, 16, 17, 19, 20, 21, 23], "yaml": [0, 14, 16], "file": [0, 1, 2, 9, 13, 14, 15, 16, 17], "configur": [0, 1, 2, 9, 13, 14, 16, 23], "experi": [0, 16, 18, 21, 23], "below": [0, 14, 20], "tree": 0, "backend": 0, "connector": [0, 1, 3, 16], "simpy_connector": [0, 1], "exampl": [0, 1, 2, 16, 17, 18, 19, 20, 21, 22, 23], "ping_pong": [0, 4], "front_end": 0, "compoundmodul": [0, 8, 9, 14, 16], "simplemodul": [0, 5, 6, 9, 13, 14, 23], "compound_modul": [0, 9, 14], "sim_ent": [0, 9], "simple_modul": [0, 9, 22], "parser": 0, "instantiate_compound_modul": [0, 14], "parse_channel": [0, 14], "parse_connect": [0, 14], "parse_simple_modul": [0, 14], "parse_yaml_directori": [0, 14], "parse_yaml_fil": [0, 14], "sanitize_compound_descriptor": [0, 14], "sim_log": 0, "critic": [0, 15], "debug": [0, 15], "error": [0, 15], "info": [0, 15, 16, 20], "log_to_consol": [0, 15, 16], "log_to_fil": [0, 15], "remove_console_log": [0, 15], "set_log_level": [0, 15, 16, 20], "warn": [0, 15], "util": 0, "futuremetr": [0, 1, 2, 16, 17], "multirandom": [0, 1, 2, 16, 17], "get_metr": [0, 17], "get_metrics_from_csv": [0, 17], "time_unit_factor": [0, 16, 17], "format": [0, 1, 2, 14, 15, 19, 20, 21], "purpos": 0, "index": [0, 1, 2, 8, 9, 12, 16, 17, 19], "search": 0, "page": [0, 23], "omnetpupi": 1, "sub": [1, 8, 9], "respons": 1, "api": [1, 15], "engin": [1, 2, 3, 16, 20, 23], "front": [1, 9], "end": [1, 9], "independ": [1, 2, 16, 20, 23], "provid": [1, 2, 14, 17, 18], "necessari": [1, 9], "tool": [1, 9, 14], "run": [1, 2, 12, 16, 20, 23], "class": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23], "__init__": [1, 5, 9], "metric": [1, 2, 3, 9, 13, 16, 17, 20, 23], "none": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20], "output_dir": [1, 2, 3, 16, 20, 23], "repetit": [1, 2, 3, 16, 20, 23], "0": [1, 2, 3, 5, 6, 12, 15, 17, 19, 20], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "abc": [1, 2], "an": [1, 2, 7, 9, 11, 13, 14, 15, 16, 19, 20, 23], "interfac": [1, 2, 11], "abstract": [1, 2, 9, 13], "meant": [1, 2, 13], "subclass": [1, 2, 5, 6, 7, 9, 13, 16, 23], "specif": [1, 2, 15], "paramet": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23], "object": [1, 2, 9, 10, 11, 12, 16, 17, 23], "describ": [1, 2, 17, 18, 19, 20, 22, 23], "context": [1, 2, 5, 6, 9, 12, 13, 14], "access": [1, 2, 12, 20, 23], "random": [1, 2, 12, 16, 17, 20, 23], "number": [1, 2, 5, 6, 12, 16, 17, 20, 23], "gener": [1, 2, 7, 9, 12, 14, 16, 17, 20, 21, 23], "list": [1, 2, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "option": [1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23], "A": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20], "record": [1, 2, 9, 13, 16], "dure": [1, 2, 17], "str": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20], "directori": [1, 2, 14, 16, 20, 23], "where": [1, 2, 12, 18, 20, 22, 23], "data": [1, 2, 14, 16, 17, 20], "store": [1, 2, 8, 9, 10, 16, 20, 23], "which": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 16, 20], "mean": [1, 2, 17, 20, 23], "int": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 20], "attribut": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16], "collect": [1, 2, 16, 17, 20, 23], "If": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23], "add_ent": [1, 2, 3], "add": [1, 2, 8, 9], "simulatedent": [1, 2, 7, 8, 9, 11, 12, 13], "ad": [1, 2, 8, 9, 12, 15, 18, 20, 22], "cancel_schedul": [1, 2, 3, 8, 9, 12], "cancel": [1, 2, 8, 9, 12], "schedul": [1, 2, 5, 6, 8, 9, 12, 13], "self": [1, 2, 5, 6, 8, 9, 12, 13, 19], "noth": [1, 2, 7, 9, 11], "happen": [1, 2], "dump_metr": [1, 2], "dump": [1, 2, 16], "temporari": [1, 2, 20], "name": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23], "get_tim": [1, 2, 3], "return": [1, 2, 7, 8, 9, 14, 15, 16, 17], "current": [1, 2, 8, 9, 12, 14, 15, 16, 17], "unit": [1, 2, 16, 17, 19, 20, 23], "determin": [1, 2, 17, 23], "is_schedul": [1, 2, 3, 8, 9, 12], "should": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 23], "receiv": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13], "instanti": [1, 2, 14, 16, 23], "multipl": [1, 2, 16, 17, 19], "stream": [1, 2], "power": [1, 2], "seed": [1, 2, 16, 17, 20], "record_metr": [1, 2], "valu": [1, 2, 9, 13, 17, 20], "float": [1, 2, 7, 8, 9, 12, 15, 16, 17, 20], "dict": [1, 2, 8, 9, 10, 12, 14, 16, 17, 20], "csv": [1, 2, 20], "turn": [1, 2], "string": [1, 2, 15, 17, 19, 20], "under": [1, 2], "sampl": [1, 2, 9, 13, 17, 20, 23], "column": [1, 2, 17, 20], "schedule_port_input": [1, 2, 3], "schedule_self_messag": [1, 2, 3, 8, 9, 12], "from": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 19, 20, 21, 23], "start_simul": [1, 2, 3], "until": [1, 2, 3, 16, 20], "start": [1, 2, 16], "stop": [1, 2], "more": [1, 2, 7, 9, 16, 18, 19, 22], "simpyconnector": [1, 3], "set": [2, 4, 8, 9, 12, 13, 15, 16, 17, 19, 20], "function": [2, 14, 16, 17, 20], "remov": [2, 15], "manag": [2, 16, 20], "simpi": [3, 16, 20, 23], "test": 4, "learn": 4, "pingpongmodul": [4, 5, 6], "ping_pong_simpl": [4, 5], "toi": 5, "ping": [5, 6], "pong": [5, 6], "protocol": 5, "consist": 5, "pingmodul": 5, "pongmodul": 5, "fashion": 5, "back": 5, "repeat": [5, 21], "specifi": [5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "identifi": [5, 6, 7, 8, 9, 12, 13, 14, 15], "5": [5, 6, 12, 17, 20, 21, 23], "same": [5, 6, 8, 9, 11, 13, 16, 19, 23], "except": [5, 6, 8, 9, 11, 14, 23], "first": [5, 6, 7, 9, 14, 17], "differenti": [5, 6], "handl": [5, 6, 7, 9, 13], "initi": [5, 6, 12, 14, 16], "either": [5, 6], "uniqu": [5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19], "second": [5, 6, 16, 17, 20], "port_nam": [5, 6, 7, 8, 9, 12, 13, 19, 23], "must": [5, 6, 9, 12, 13, 18, 19, 20, 22], "everi": [5, 6, 9, 11, 12, 13, 19, 20], "wa": [5, 6, 7, 8, 9, 12, 13, 14], "step": [5, 6, 12, 23], "right": [5, 6, 12], "befor": [5, 6, 12], "begin": [5, 6, 12], "automat": [5, 6, 7, 9, 12, 20, 23], "call": [5, 6, 7, 8, 9, 12, 13, 23], "onc": [5, 6, 12], "4": [5, 6, 12, 15, 17], "pass": [5, 6, 7, 8, 9, 12, 16, 19, 23], "allow": [5, 6, 12, 17], "perform": [5, 6, 12], "action": [5, 6, 9, 12, 13], "synchron": [5, 6, 12], "ha": [5, 6, 12, 13, 14, 16], "guarante": [5, 6, 12], "previou": [5, 6, 12], "have": [5, 6, 7, 8, 9, 11, 12, 18, 19, 22], "alreadi": [5, 6, 8, 9, 11, 12, 14, 15, 16, 18, 21], "been": [5, 6, 12], "execut": [5, 6, 12], "loss_prob": [7, 9, 19], "appli": [7, 9, 19], "travel": [7, 9], "alwai": [7, 9], "b": [7, 8, 9, 13, 17], "vice": [7, 9, 11], "versa": [7, 9, 11], "after": [7, 9], "overrid": [7, 9], "process_messag": [7, 9], "asymmetr": [7, 9], "apply_loss": [7, 9], "arbitrari": [7, 8, 9], "distribut": [7, 9, 17], "bool": [7, 9, 11, 12], "true": [7, 9], "lost": [7, 9], "fals": [7, 9], "otherwis": [7, 9, 23], "generate_delai": [7, 9], "zero": [7, 9], "sent": [7, 8, 9, 11, 12], "immedi": [7, 9], "final": [7, 9], "By": [7, 9], "doe": [7, 9, 11], "drop": [7, 9], "do": [8, 9, 18], "organ": [8, 9], "Their": [8, 9], "intrins": [8, 9], "compund": 8, "semant": [8, 11, 13], "kwarg": [8, 9], "repres": [8, 9, 10, 11, 13, 18, 19, 21, 22], "see": [8, 9, 11, 13, 16, 19, 20, 23], "inherit": [8, 9, 13], "constructor": [8, 9, 19, 23], "addit": [8, 9, 10, 15], "keyword": [8, 9], "argument": [8, 9], "sub_modul": [8, 9], "add_sub_modul": [8, 9], "rais": [8, 9, 11, 14, 16], "exist": [8, 9], "intern": [8, 9, 12, 17], "local_port": [8, 9, 13], "remote_ent": [8, 9, 13], "remote_port": [8, 9, 13], "remot": [8, 9, 11, 13], "local": [8, 9, 13, 19, 21], "made": [8, 9, 13, 16], "ani": [8, 9, 11, 12, 13, 17, 20, 21, 23], "forward_input": [8, 9, 11, 19], "port_contain": [8, 9], "port_submodul": [8, 9], "forward_output": [8, 9, 11, 19], "get_sub_modul": [8, 9], "get": [8, 9], "retriev": [8, 9], "given": [8, 9], "itself": [8, 9, 11, 12, 19, 23], "schedule_messag": [8, 9, 12], "tx_output": [8, 9, 11, 12], "creat": [9, 15, 17, 18, 23], "own": [9, 18], "field": [9, 10, 17, 19, 20], "meta": [9, 10], "wrapper": [9, 10, 17], "metadata": [9, 10], "typic": [9, 10], "case": [9, 10, 14, 16, 18, 19, 20, 23], "header": [9, 10], "edit": [9, 10], "incom": [9, 12, 13], "charg": [9, 13], "emit_metr": [9, 13], "fed": [9, 11, 13], "up": [9, 13], "intermedi": [9, 13], "onli": [11, 16, 17, 19, 20, 23], "parent": [11, 12], "e": [11, 19], "belong": [11, 12], "connected_port": 11, "forwarded_input_port": 11, "forwarded_output_port": 11, "subscribed_port": 11, "subscrib": [11, 19], "copi": 11, "is_subscrib": 11, "flag": [11, 12], "indic": [11, 12, 17], "whether": [11, 12], "subscribe_to": 11, "valueerror": [11, 14], "disconnect": 11, "third": 11, "mutual": 11, "tx_input": 11, "activ": [12, 15], "mai": 12, "keep": 12, "refer": [12, 19, 23], "sim_context": [12, 14], "variabl": [12, 16], "like": [12, 19, 21], "top": [12, 23], "level": [12, 15, 16, 20, 23], "is_listen": 12, "listen": 12, "set_sim_context": 12, "homonym": 13, "pars": [14, 16], "topologi": [14, 21], "module_class": 14, "channel_class": 14, "compound_descriptor": 14, "next_module_id": 14, "next_channel_id": 14, "descriptor": 14, "recurs": 14, "In": [14, 18, 19, 20, 23], "inner": 14, "import": [14, 18, 19, 22, 23], "need": [14, 18, 23], "next": [14, 17], "tupl": [14, 16, 17], "instanc": [14, 16, 19], "new": [14, 15], "found": 14, "one": [14, 15, 17, 18, 19, 20, 21, 22, 23], "channel_descriptor": 14, "raw": 14, "dictionari": [14, 16, 17, 18, 19, 20, 21, 22], "connection_data": 14, "invalid": 14, "simple_descriptor": 14, "kei": [14, 16, 18, 19, 20, 21, 22], "directory_path": 14, "order": 14, "config": [14, 16, 23], "path": [14, 16, 20, 23], "filenotfounderror": 14, "mandatori": [14, 20, 21, 22], "miss": 14, "depend": [14, 16, 19], "loop": [14, 19], "file_path": 14, "directli": [14, 16], "load": [14, 17, 23], "sanit": 14, "ensur": 14, "would": 14, "caus": 14, "endless": 14, "detect": [14, 19], "log": [15, 16, 20], "module_id": 15, "logger": 15, "becaus": [15, 17, 19], "present": 15, "entri": [15, 19], "10": [15, 17, 19, 21, 23], "stdout": 15, "consol": 15, "streamhandl": 15, "handler": 15, "filenam": [15, 17], "append": 15, "mode": [15, 17], "filehandl": 15, "1": [15, 16, 17, 19, 20], "2": [15, 17, 19, 20, 23], "3": [15, 17], "global": [16, 20, 23], "friendli": 16, "config_fil": [16, 23], "take": 16, "care": 16, "read": 16, "absolut": 16, "rel": [16, 17, 20, 23], "work": 16, "rigid": 16, "exp": 16, "run_simul": [16, 23], "seed_set": 16, "length": [16, 17], "rngs_per_rep": 16, "moment": [16, 20], "empti": [16, 17, 20], "yaml_directori": [16, 20, 23], "simulate_until": [16, 20, 23], "long": [16, 20], "time_unit": [16, 20, 23], "u": [16, 17, 20, 23], "microsecond": [16, 17, 20, 23], "log_level": [16, 20], "simulations_param": 16, "element": [16, 17], "global_param": [16, 20, 23], "avail": 16, "singl": [16, 17], "notimplementederror": 16, "rng": [16, 20], "Its": 16, "chosen": [16, 17], "properti": 16, "factor": [16, 17], "convert": [16, 17], "across": 17, "vector": [17, 20, 23], "median": 17, "std": [17, 20], "var": [17, 20], "min": [17, 20], "max": [17, 20], "count": 17, "percentil": [17, 20], "type": [17, 19, 20, 21, 23], "apart": 17, "boolean": 17, "statist": 17, "Such": 17, "complet": 17, "standard": 17, "deviat": 17, "varianc": 17, "minimum": 17, "maximum": 17, "25": [17, 20], "75": [17, 20], "95": 17, "99": 17, "alia": 17, "11": 17, "8": [17, 23], "7": 17, "6": 17, "9": 17, "44": 17, "around": 17, "librari": 17, "integ": 17, "betavari": 17, "alpha": 17, "beta": 17, "point": 17, "n": [17, 20], "shape": 17, "posit": 17, "choic": 17, "seq": 17, "sequenc": 17, "iter": 17, "weight": 17, "cum_weight": 17, "k": 17, "size": 17, "popul": 17, "replac": 17, "select": 17, "assum": 17, "equal": 17, "cumul": 17, "choos": 17, "expovari": 17, "lambd": 17, "normal": 17, "gaussian": 17, "rate": [17, 18], "exponenti": 17, "gammavari": 17, "gamma": 17, "scale": 17, "gauss": 17, "mu": 17, "sigma": 17, "geometr": 17, "p": 17, "numpi": 17, "instead": [17, 19], "success": 17, "getstat": 17, "state": 17, "lognormvari": 17, "lognorm": 17, "normalvari": 17, "paretovari": 17, "pareto": 17, "parentovari": 17, "randint": 17, "lower": 17, "bound": 17, "upper": 17, "uniformli": 17, "rang": 17, "setstat": 17, "shuffl": 17, "x": 17, "place": [17, 23], "triangular": 17, "low": 17, "high": 17, "midpoint": 17, "uniform": 17, "vonmisesvari": 17, "kappa": 17, "von": 17, "mise": 17, "concentr": 17, "weibullvari": 17, "weibul": 17, "df": 17, "comput": 17, "Not": 17, "version": 17, "requir": 17, "memori": 17, "panda": 17, "datafram": 17, "request": 17, "For": [17, 19, 20, 23], "m": [17, 19, 20, 21], "1e": 17, "millisecond": [17, 20], "nanosecond": [17, 20], "what": [18, 20, 23], "dynam": [18, 23], "locat": [18, 22, 23], "usual": 18, "fibrechannel": 18, "my_simul": [18, 22], "openspacechannel": 18, "mani": [18, 19], "omnetpypi": [18, 19, 23], "built": 18, "go": [19, 22, 23], "associ": 19, "group": 19, "togeth": [19, 21], "thu": [19, 21], "inform": [19, 23], "part": [19, 23], "technic": 19, "could": 19, "localareanetwork1": [19, 21], "lan0": [19, 21, 23], "definit": [19, 21], "localareanetwork2": [19, 21], "t": [19, 21], "reserv": [19, 20], "rest": 19, "somewher": 19, "prevent": 19, "actual": 19, "compat": 19, "look": [19, 21], "client": 19, "clientmodul": [19, 22, 23], "server_address": 19, "ip": 19, "address": 19, "server": [19, 23], "know": 19, "192": 19, "168": 19, "submodule_nam": 19, "target": [19, 21, 23], "kind": 19, "ignor": 19, "sometim": 19, "similar": [19, 21], "syntax": 19, "snippet": 19, "equival": 19, "client0": 19, "router": [19, 21], "client1": 19, "lan1": [19, 21, 23], "lan": [19, 21, 23], "let": [19, 21], "now": [19, 23], "put": 19, "piec": 19, "full": 19, "area": [19, 21], "expos": 19, "servermodul": [19, 22, 23], "num_port": [19, 21], "routermodul": [19, 21, 22], "100": [19, 20, 21, 23], "lan2": 19, "lan3": 19, "get_global_param": 20, "scalar": 20, "most": 20, "common": 20, "dedic": 20, "_vector": 20, "aggreg": 20, "50": [20, 23], "timestamp": 20, "num_process": [20, 23], "parallel": [20, 23], "num_rng": [20, 23], "per": 20, "row": 20, "01": 20, "001": 20, "05": 20, "15": 20, "02": 20, "004": 20, "separ": 20, "200": 20, "column1": 20, "column2": 20, "column3": 20, "015": 20, "00225": 20, "while": 20, "some": 20, "whole": [21, 23], "As": 21, "imagin": 21, "veri": 21, "we": [21, 23], "won": 21, "explan": 21, "proceedbi": 21, "show": 21, "continu": 21, "subnet1": 21, "subnet2": 21, "human": 23, "readabl": 23, "nutshel": 23, "form": 23, "character": 23, "whose": 23, "To": 23, "design": 23, "just": 23, "35": 23, "1000000": 23, "queuing_tim": 23, "num_serv": 23, "num_client": 23, "my_packag": 23, "another_packag": 23, "clientservermodul": 23, "client_1": 23, "num_request": 23, "send_rat": 23, "client_2": 23, "150": 23, "service_r": 23, "20": 23, "module_nam": 23, "yet": 23, "last": 23, "promis": 23, "practic": 23, "mynetwork": 23, "client_serv": 23, "run_experi": 23}, "objects": {"omnetpypy.backends": [[1, 0, 0, "-", "__init__"], [2, 0, 0, "-", "connector"], [3, 0, 0, "-", "simpy_connector"]], "omnetpypy.backends.__init__": [[1, 1, 1, "", "Connector"]], "omnetpypy.backends.__init__.Connector": [[1, 2, 1, "", "add_entity"], [1, 2, 1, "", "cancel_scheduled"], [1, 2, 1, "", "dump_metric"], [1, 2, 1, "", "get_time"], [1, 2, 1, "", "is_scheduled"], [1, 2, 1, "", "random"], [1, 2, 1, "", "record_metric"], [1, 2, 1, "", "schedule_port_input"], [1, 2, 1, "", "schedule_self_message"], [1, 2, 1, "", "start_simulation"]], "omnetpypy.backends.connector": [[2, 1, 1, "", "Connector"]], "omnetpypy.backends.connector.Connector": [[2, 2, 1, "", "add_entity"], [2, 2, 1, "", "cancel_scheduled"], [2, 2, 1, "", "dump_metric"], [2, 2, 1, "", "get_time"], [2, 2, 1, "", "is_scheduled"], [2, 2, 1, "", "random"], [2, 2, 1, "", "record_metric"], [2, 2, 1, "", "schedule_port_input"], [2, 2, 1, "", "schedule_self_message"], [2, 2, 1, "", "start_simulation"]], "omnetpypy.backends.simpy_connector": [[3, 1, 1, "", "SimPyConnector"]], "omnetpypy.backends.simpy_connector.SimPyConnector": [[3, 2, 1, "", "add_entity"], [3, 2, 1, "", "cancel_scheduled"], [3, 2, 1, "", "get_time"], [3, 2, 1, "", "is_scheduled"], [3, 2, 1, "", "schedule_port_input"], [3, 2, 1, "", "schedule_self_message"], [3, 2, 1, "", "start_simulation"]], "omnetpypy.examples": [[4, 0, 0, "-", "__init__"]], "omnetpypy.examples.ping_pong": [[5, 0, 0, "-", "__init__"], [6, 0, 0, "-", "ping_pong_simple"]], "omnetpypy.examples.ping_pong.__init__": [[5, 1, 1, "", "PingPongModule"]], "omnetpypy.examples.ping_pong.__init__.PingPongModule": [[5, 2, 1, "", "handle_message"], [5, 2, 1, "", "initialize"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, 1, 1, "", "PingPongModule"]], "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule": [[6, 2, 1, "", "handle_message"], [6, 2, 1, "", "initialize"]], "omnetpypy.front_end": [[9, 0, 0, "-", "__init__"], [7, 0, 0, "-", "channel"], [8, 0, 0, "-", "compound_module"], [10, 0, 0, "-", "message"], [11, 0, 0, "-", "port"], [12, 0, 0, "-", "sim_entity"], [13, 0, 0, "-", "simple_module"]], "omnetpypy.front_end.__init__": [[9, 1, 1, "", "Channel"], [9, 1, 1, "", "CompoundModule"], [9, 1, 1, "", "Message"], [9, 1, 1, "", "SimpleModule"]], "omnetpypy.front_end.__init__.Channel": [[9, 2, 1, "", "apply_loss"], [9, 2, 1, "", "generate_delay"], [9, 2, 1, "", "handle_message"], [9, 2, 1, "", "process_message"]], "omnetpypy.front_end.__init__.CompoundModule": [[9, 2, 1, "", "add_sub_module"], [9, 2, 1, "", "cancel_scheduled"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "forward_input"], [9, 2, 1, "", "forward_output"], [9, 2, 1, "", "get_sub_module"], [9, 2, 1, "", "handle_message"], [9, 2, 1, "", "is_scheduled"], [9, 2, 1, "", "schedule_message"], [9, 2, 1, "", "send"]], "omnetpypy.front_end.__init__.SimpleModule": [[9, 2, 1, "", "connect"], [9, 2, 1, "", "emit_metric"], [9, 2, 1, "", "handle_message"]], "omnetpypy.front_end.channel": [[7, 1, 1, "", "Channel"]], "omnetpypy.front_end.channel.Channel": [[7, 2, 1, "", "apply_loss"], [7, 2, 1, "", "generate_delay"], [7, 2, 1, "", "handle_message"], [7, 2, 1, "", "process_message"]], "omnetpypy.front_end.compound_module": [[8, 1, 1, "", "CompoundModule"]], "omnetpypy.front_end.compound_module.CompoundModule": [[8, 2, 1, "", "add_sub_module"], [8, 2, 1, "", "cancel_scheduled"], [8, 2, 1, "", "connect"], [8, 2, 1, "", "forward_input"], [8, 2, 1, "", "forward_output"], [8, 2, 1, "", "get_sub_module"], [8, 2, 1, "", "handle_message"], [8, 2, 1, "", "is_scheduled"], [8, 2, 1, "", "schedule_message"], [8, 2, 1, "", "send"]], "omnetpypy.front_end.message": [[10, 1, 1, "", "Message"]], "omnetpypy.front_end.port": [[11, 1, 1, "", "Port"]], "omnetpypy.front_end.port.Port": [[11, 2, 1, "", "connect"], [11, 2, 1, "", "disconnect"], [11, 2, 1, "", "forward_input"], [11, 2, 1, "", "forward_output"], [11, 2, 1, "", "subscribe_to"], [11, 2, 1, "", "tx_input"], [11, 2, 1, "", "tx_output"]], "omnetpypy.front_end.sim_entity": [[12, 1, 1, "", "SimulatedEntity"]], "omnetpypy.front_end.sim_entity.SimulatedEntity": [[12, 2, 1, "", "cancel_scheduled"], [12, 2, 1, "", "handle_message"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "is_scheduled"], [12, 2, 1, "", "schedule_message"], [12, 2, 1, "", "send"], [12, 2, 1, "", "set_sim_context"]], "omnetpypy.front_end.simple_module": [[13, 1, 1, "", "SimpleModule"]], "omnetpypy.front_end.simple_module.SimpleModule": [[13, 2, 1, "", "connect"], [13, 2, 1, "", "emit_metric"], [13, 2, 1, "", "handle_message"]], "omnetpypy": [[14, 0, 0, "-", "parser"], [15, 0, 0, "-", "sim_log"], [16, 0, 0, "-", "simulation"], [17, 0, 0, "-", "utilities"]], "omnetpypy.parser": [[14, 3, 1, "", "instantiate_compound_module"], [14, 3, 1, "", "parse_channels"], [14, 3, 1, "", "parse_connection"], [14, 3, 1, "", "parse_simple_modules"], [14, 3, 1, "", "parse_yaml_directory"], [14, 3, 1, "", "parse_yaml_file"], [14, 3, 1, "", "sanitize_compound_descriptors"]], "omnetpypy.sim_log": [[15, 3, 1, "", "critical"], [15, 3, 1, "", "debug"], [15, 3, 1, "", "error"], [15, 3, 1, "", "info"], [15, 3, 1, "", "log_to_console"], [15, 3, 1, "", "log_to_file"], [15, 3, 1, "", "remove_console_log"], [15, 3, 1, "", "set_log_level"], [15, 3, 1, "", "warning"]], "omnetpypy.simulation": [[16, 1, 1, "", "Experiment"], [16, 1, 1, "", "Simulation"]], "omnetpypy.simulation.Experiment": [[16, 2, 1, "", "run_simulations"]], "omnetpypy.simulation.Simulation": [[16, 2, 1, "", "start"], [16, 2, 1, "", "time"], [16, 4, 1, "", "time_unit_factor"]], "omnetpypy.utilities": [[17, 1, 1, "", "FutureMetric"], [17, 1, 1, "", "MultiRandom"], [17, 3, 1, "", "get_metrics"], [17, 3, 1, "", "get_metrics_from_csv"], [17, 3, 1, "", "time_unit_factor"]], "omnetpypy.utilities.FutureMetric": [[17, 5, 1, "", "columns"], [17, 5, 1, "", "count"], [17, 5, 1, "", "max"], [17, 5, 1, "", "mean"], [17, 5, 1, "", "median"], [17, 5, 1, "", "min"], [17, 5, 1, "", "name"], [17, 5, 1, "", "percentiles"], [17, 5, 1, "", "std"], [17, 5, 1, "", "type"], [17, 5, 1, "", "var"], [17, 5, 1, "", "vector"]], "omnetpypy.utilities.MultiRandom": [[17, 2, 1, "", "betavariate"], [17, 2, 1, "", "choice"], [17, 2, 1, "", "choices"], [17, 2, 1, "", "expovariate"], [17, 2, 1, "", "gammavariate"], [17, 2, 1, "", "gauss"], [17, 2, 1, "", "geometric"], [17, 2, 1, "", "getstate"], [17, 2, 1, "", "lognormvariate"], [17, 2, 1, "", "normalvariate"], [17, 2, 1, "", "paretovariate"], [17, 2, 1, "", "randint"], [17, 2, 1, "", "random"], [17, 2, 1, "", "sample"], [17, 2, 1, "", "setstate"], [17, 2, 1, "", "shuffle"], [17, 2, 1, "", "triangular"], [17, 2, 1, "", "uniform"], [17, 2, 1, "", "vonmisesvariate"], [17, 2, 1, "", "weibullvariate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "omnetpypi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "doc": 0, "alpha": 0, "0": 0, "1": 0, "3": 0, "content": 0, "indic": 0, "tabl": 0, "backend": [1, 2, 3], "modul": [1, 4, 5, 9, 19, 22], "connector": 2, "simpy_connector": 3, "exampl": [4, 5, 6], "ping_pong": [5, 6], "ping_pong_simpl": 6, "front_end": [7, 8, 9, 10, 11, 12, 13], "channel": [7, 18], "compound_modul": 8, "messag": 10, "port": 11, "sim_ent": 12, "simple_modul": 13, "parser": 14, "sim_log": 15, "simul": 16, "util": 17, "yaml": [18, 19, 20, 21, 22, 23], "file": [18, 19, 20, 21, 22, 23], "compound": 19, "configur": 20, "network": 21, "simpl": 22, "format": 23, "purpos": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to omnetpypy docs (alpha-0.1.3)": [[0, "welcome-to-omnetpypy-docs-alpha-0-1-3"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "omnetpypy.backends": [[1, "module-omnetpypy.backends.__init__"]], "Modules:": [[1, null], [4, null], [5, null], [9, null]], "omnetpypy.backends.connector": [[2, "module-omnetpypy.backends.connector"]], "omnetpypy.backends.simpy_connector": [[3, "module-omnetpypy.backends.simpy_connector"]], "omnetpypy.examples": [[4, "module-omnetpypy.examples.__init__"]], "omnetpypy.examples.ping_pong": [[5, "module-omnetpypy.examples.ping_pong.__init__"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"]], "omnetpypy.front_end.channel": [[7, "module-omnetpypy.front_end.channel"]], "omnetpypy.front_end.compound_module": [[8, "module-omnetpypy.front_end.compound_module"]], "omnetpypy.front_end": [[9, "module-omnetpypy.front_end.__init__"]], "omnetpypy.front_end.message": [[10, "module-omnetpypy.front_end.message"]], "omnetpypy.front_end.port": [[11, "module-omnetpypy.front_end.port"]], "omnetpypy.front_end.sim_entity": [[12, "module-omnetpypy.front_end.sim_entity"]], "omnetpypy.front_end.simple_module": [[13, "module-omnetpypy.front_end.simple_module"]], "omnetpypy.parser": [[14, "module-omnetpypy.parser"]], "omnetpypy.sim_log": [[15, "module-omnetpypy.sim_log"]], "omnetpypy.simulation": [[16, "module-omnetpypy.simulation"]], "omnetpypy.utilities": [[17, "module-omnetpypy.utilities"]], "Channels YAML file": [[18, "channels-yaml-file"]], "Compound Modules YAML file": [[19, "compound-modules-yaml-file"]], "Configuration YAML File": [[20, "configuration-yaml-file"]], "Network YAML file": [[21, "network-yaml-file"]], "Simple Modules YAML file": [[22, "simple-modules-yaml-file"]], "Format and purpose of YAML files": [[23, "format-and-purpose-of-yaml-files"]], "YAML files formats": [[23, null]]}, "indexentries": {"connector (class in omnetpypy.backends.__init__)": [[1, "omnetpypy.backends.__init__.Connector"]], "add_entity() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.cancel_scheduled"]], "dump_metric() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.dump_metric"]], "get_time() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.get_time"]], "is_scheduled() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.is_scheduled"]], "module": [[1, "module-omnetpypy.backends.__init__"], [2, "module-omnetpypy.backends.connector"], [3, "module-omnetpypy.backends.simpy_connector"], [4, "module-omnetpypy.examples.__init__"], [5, "module-omnetpypy.examples.ping_pong.__init__"], [6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"], [7, "module-omnetpypy.front_end.channel"], [8, "module-omnetpypy.front_end.compound_module"], [9, "module-omnetpypy.front_end.__init__"], [10, "module-omnetpypy.front_end.message"], [11, "module-omnetpypy.front_end.port"], [12, "module-omnetpypy.front_end.sim_entity"], [13, "module-omnetpypy.front_end.simple_module"], [14, "module-omnetpypy.parser"], [15, "module-omnetpypy.sim_log"], [16, "module-omnetpypy.simulation"], [17, "module-omnetpypy.utilities"]], "omnetpypy.backends.__init__": [[1, "module-omnetpypy.backends.__init__"]], "random() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.random"]], "record_metric() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.record_metric"]], "schedule_port_input() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.start_simulation"]], "connector (class in omnetpypy.backends.connector)": [[2, "omnetpypy.backends.connector.Connector"]], "add_entity() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.cancel_scheduled"]], "dump_metric() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.dump_metric"]], "get_time() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.get_time"]], "is_scheduled() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.is_scheduled"]], "omnetpypy.backends.connector": [[2, "module-omnetpypy.backends.connector"]], "random() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.random"]], "record_metric() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.record_metric"]], "schedule_port_input() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.start_simulation"]], "simpyconnector (class in omnetpypy.backends.simpy_connector)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector"]], "add_entity() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.cancel_scheduled"]], "get_time() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.get_time"]], "is_scheduled() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.is_scheduled"]], "omnetpypy.backends.simpy_connector": [[3, "module-omnetpypy.backends.simpy_connector"]], "schedule_port_input() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.start_simulation"]], "omnetpypy.examples.__init__": [[4, "module-omnetpypy.examples.__init__"]], "pingpongmodule (class in omnetpypy.examples.ping_pong.__init__)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule"]], "handle_message() (omnetpypy.examples.ping_pong.__init__.pingpongmodule method)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule.handle_message"]], "initialize() (omnetpypy.examples.ping_pong.__init__.pingpongmodule method)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule.initialize"]], "omnetpypy.examples.ping_pong.__init__": [[5, "module-omnetpypy.examples.ping_pong.__init__"]], "pingpongmodule (class in omnetpypy.examples.ping_pong.ping_pong_simple)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule"]], "handle_message() (omnetpypy.examples.ping_pong.ping_pong_simple.pingpongmodule method)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule.handle_message"]], "initialize() (omnetpypy.examples.ping_pong.ping_pong_simple.pingpongmodule method)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule.initialize"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"]], "channel (class in omnetpypy.front_end.channel)": [[7, "omnetpypy.front_end.channel.Channel"]], "apply_loss() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.apply_loss"]], "generate_delay() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.generate_delay"]], "handle_message() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.handle_message"]], "omnetpypy.front_end.channel": [[7, "module-omnetpypy.front_end.channel"]], "process_message() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.process_message"]], "compoundmodule (class in omnetpypy.front_end.compound_module)": [[8, "omnetpypy.front_end.compound_module.CompoundModule"]], "add_sub_module() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.add_sub_module"]], "cancel_scheduled() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.cancel_scheduled"]], "connect() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.connect"]], "forward_input() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.forward_input"]], "forward_output() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.forward_output"]], "get_sub_module() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.get_sub_module"]], "handle_message() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.handle_message"]], "is_scheduled() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.is_scheduled"]], "omnetpypy.front_end.compound_module": [[8, "module-omnetpypy.front_end.compound_module"]], "schedule_message() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.schedule_message"]], "send() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.send"]], "channel (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.Channel"]], "compoundmodule (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.CompoundModule"]], "message (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.Message"]], "simplemodule (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.SimpleModule"]], "add_sub_module() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.add_sub_module"]], "apply_loss() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.apply_loss"]], "cancel_scheduled() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.cancel_scheduled"]], "connect() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.connect"]], "connect() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.connect"]], "emit_metric() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.emit_metric"]], "forward_input() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.forward_input"]], "forward_output() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.forward_output"]], "generate_delay() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.generate_delay"]], "get_sub_module() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.get_sub_module"]], "handle_message() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.handle_message"]], "handle_message() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.handle_message"]], "handle_message() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.handle_message"]], "is_scheduled() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.is_scheduled"]], "omnetpypy.front_end.__init__": [[9, "module-omnetpypy.front_end.__init__"]], "process_message() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.process_message"]], "schedule_message() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.schedule_message"]], "send() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.send"]], "message (class in omnetpypy.front_end.message)": [[10, "omnetpypy.front_end.message.Message"]], "omnetpypy.front_end.message": [[10, "module-omnetpypy.front_end.message"]], "port (class in omnetpypy.front_end.port)": [[11, "omnetpypy.front_end.port.Port"]], "connect() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.connect"]], "disconnect() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.disconnect"]], "forward_input() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.forward_input"]], "forward_output() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.forward_output"]], "omnetpypy.front_end.port": [[11, "module-omnetpypy.front_end.port"]], "subscribe_to() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.subscribe_to"]], "tx_input() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.tx_input"]], "tx_output() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.tx_output"]], "simulatedentity (class in omnetpypy.front_end.sim_entity)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity"]], "cancel_scheduled() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.cancel_scheduled"]], "handle_message() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.handle_message"]], "initialize() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.initialize"]], "is_scheduled() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.is_scheduled"]], "omnetpypy.front_end.sim_entity": [[12, "module-omnetpypy.front_end.sim_entity"]], "schedule_message() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.schedule_message"]], "send() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.send"]], "set_sim_context() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.set_sim_context"]], "simplemodule (class in omnetpypy.front_end.simple_module)": [[13, "omnetpypy.front_end.simple_module.SimpleModule"]], "connect() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.connect"]], "emit_metric() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.emit_metric"]], "handle_message() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.handle_message"]], "omnetpypy.front_end.simple_module": [[13, "module-omnetpypy.front_end.simple_module"]], "instantiate_compound_module() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.instantiate_compound_module"]], "omnetpypy.parser": [[14, "module-omnetpypy.parser"]], "parse_channels() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_channels"]], "parse_connection() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_connection"]], "parse_simple_modules() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_simple_modules"]], "parse_yaml_directory() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_yaml_directory"]], "parse_yaml_file() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_yaml_file"]], "sanitize_compound_descriptors() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.sanitize_compound_descriptors"]], "critical() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.critical"]], "debug() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.debug"]], "error() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.error"]], "info() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.info"]], "log_to_console() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.log_to_console"]], "log_to_file() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.log_to_file"]], "omnetpypy.sim_log": [[15, "module-omnetpypy.sim_log"]], "remove_console_log() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.remove_console_log"]], "set_log_level() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.set_log_level"]], "warning() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.warning"]], "experiment (class in omnetpypy.simulation)": [[16, "omnetpypy.simulation.Experiment"]], "simulation (class in omnetpypy.simulation)": [[16, "omnetpypy.simulation.Simulation"]], "omnetpypy.simulation": [[16, "module-omnetpypy.simulation"]], "run_simulations() (omnetpypy.simulation.experiment method)": [[16, "omnetpypy.simulation.Experiment.run_simulations"]], "start() (omnetpypy.simulation.simulation method)": [[16, "omnetpypy.simulation.Simulation.start"]], "time() (omnetpypy.simulation.simulation method)": [[16, "omnetpypy.simulation.Simulation.time"]], "time_unit_factor (omnetpypy.simulation.simulation property)": [[16, "omnetpypy.simulation.Simulation.time_unit_factor"]], "futuremetric (class in omnetpypy.utilities)": [[17, "omnetpypy.utilities.FutureMetric"]], "multirandom (class in omnetpypy.utilities)": [[17, "omnetpypy.utilities.MultiRandom"]], "betavariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.betavariate"]], "choice() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.choice"]], "choices() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.choices"]], "columns (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.columns"]], "count (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.count"]], "expovariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.expovariate"]], "gammavariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.gammavariate"]], "gauss() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.gauss"]], "geometric() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.geometric"]], "get_metrics() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.get_metrics"]], "get_metrics_from_csv() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.get_metrics_from_csv"]], "getstate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.getstate"]], "lognormvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.lognormvariate"]], "max (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.max"]], "mean (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.mean"]], "median (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.median"]], "min (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.min"]], "name (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.name"]], "normalvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.normalvariate"]], "omnetpypy.utilities": [[17, "module-omnetpypy.utilities"]], "paretovariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.paretovariate"]], "percentiles (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.percentiles"]], "randint() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.randint"]], "random() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.random"]], "sample() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.sample"]], "setstate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.setstate"]], "shuffle() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.shuffle"]], "std (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.std"]], "time_unit_factor() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.time_unit_factor"]], "triangular() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.triangular"]], "type (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.type"]], "uniform() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.uniform"]], "var (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.var"]], "vector (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.vector"]], "vonmisesvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.vonmisesvariate"]], "weibullvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.weibullvariate"]]}})