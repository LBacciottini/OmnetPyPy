Search.setIndex({"docnames": ["index", "omnetpypy/backends/backends", "omnetpypy/backends/connector", "omnetpypy/backends/simpy_connector", "omnetpypy/examples/examples", "omnetpypy/examples/ping_pong/ping_pong", "omnetpypy/examples/ping_pong/ping_pong_simple", "omnetpypy/front_end/channel", "omnetpypy/front_end/compound_module", "omnetpypy/front_end/front_end", "omnetpypy/front_end/message", "omnetpypy/front_end/port", "omnetpypy/front_end/sim_entity", "omnetpypy/front_end/simple_module", "omnetpypy/parser", "omnetpypy/sim_log", "omnetpypy/simulation", "omnetpypy/utilities"], "filenames": ["index.rst", "omnetpypy/backends/backends.rst", "omnetpypy/backends/connector.rst", "omnetpypy/backends/simpy_connector.rst", "omnetpypy/examples/examples.rst", "omnetpypy/examples/ping_pong/ping_pong.rst", "omnetpypy/examples/ping_pong/ping_pong_simple.rst", "omnetpypy/front_end/channel.rst", "omnetpypy/front_end/compound_module.rst", "omnetpypy/front_end/front_end.rst", "omnetpypy/front_end/message.rst", "omnetpypy/front_end/port.rst", "omnetpypy/front_end/sim_entity.rst", "omnetpypy/front_end/simple_module.rst", "omnetpypy/parser.rst", "omnetpypy/sim_log.rst", "omnetpypy/simulation.rst", "omnetpypy/utilities.rst"], "titles": ["omnetpypy package docs", "omnetpypy.backends", "omnetpypy.backends.connector", "omnetpypy.backends.simpy_connector", "omnetpypy.examples", "omnetpypy.examples.ping_pong", "omnetpypy.examples.ping_pong.ping_pong_simple", "omnetpypy.front_end.channel", "omnetpypy.front_end.compound_module", "omnetpypy.front_end", "omnetpypy.front_end.message", "omnetpypy.front_end.port", "omnetpypy.front_end.sim_entity", "omnetpypy.front_end.simple_module", "omnetpypy.parser", "omnetpypy.sim_log", "omnetpypy.simulation", "omnetpypy.utilities"], "terms": {"welcom": 0, "document": 0, "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "implement": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16], "python": 0, "network": [0, 14], "simul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "framework": 0, "discret": [0, 1], "event": [0, 1, 2, 16], "inspir": 0, "concept": 0, "omnet": [0, 8, 11, 13], "you": 0, "can": [0, 4, 7, 8, 9, 11, 13, 14, 15, 16, 17], "download": 0, "instal": 0, "simpli": 0, "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17], "pip": 0, "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "aim": 0, "those": 0, "who": [0, 5, 6], "appreci": 0, "modular": 0, "structur": [0, 8, 9, 16], "want": 0, "": [0, 17], "simplic": 0, "flexibl": 0, "main": 0, "player": 0, "within": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17], "follow": [0, 15, 16, 17], "simpl": [0, 5, 9, 13, 14], "modul": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "These": [0, 16], "basic": [0, 9, 13], "build": [0, 9, 13], "block": [0, 9, 13], "thei": [0, 7, 8, 9, 13], "entiti": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16], "interact": [0, 2], "each": [0, 1, 2, 5, 6, 11, 12, 16, 17], "other": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14], "send": [0, 5, 6, 7, 8, 9, 11, 12, 13], "messag": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15], "process": [0, 1, 2, 5, 6, 7, 8, 9, 12, 13], "them": [0, 17], "behavior": [0, 5, 6, 8, 9, 13], "custom": [0, 5, 6, 7, 9, 13, 14], "defin": [0, 1, 5, 6, 8, 9, 13, 14], "user": [0, 1, 9, 13, 16], "its": [0, 1, 2, 8, 9, 13, 14, 15], "handle_messag": [0, 5, 6, 7, 8, 9, 12, 13], "method": [0, 5, 6, 7, 8, 9, 12, 13, 17], "compound": [0, 8, 9, 14], "non": [0, 8, 9, 17], "atom": [0, 8, 9], "contain": [0, 4, 8, 9, 14, 15, 16, 17], "interconnect": 0, "submodul": [0, 8, 9, 14], "model": [0, 8, 9, 11, 13], "hierarch": [0, 8, 9], "wai": 0, "make": [0, 16], "complex": [0, 7, 9], "system": 0, "easier": 0, "fulli": [0, 14], "how": [0, 4, 8, 9, 13], "connect": [0, 1, 7, 8, 9, 11, 13, 14], "port": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13], "outsid": [0, 11], "world": [0, 11], "two": [0, 5, 7, 9, 11, 14], "differ": [0, 5, 6, 12, 17], "so": 0, "exchang": [0, 9, 10], "between": [0, 1, 5, 6, 7, 9, 10, 17], "also": [0, 8, 9, 11], "forward": [0, 7, 8, 9, 11], "input": [0, 5, 6, 8, 9, 11, 12, 13], "output": [0, 1, 2, 8, 9, 11, 13, 15, 16, 17], "anoth": [0, 8, 9, 11, 13], "crucial": 0, "bind": 0, "channel": [0, 8, 9, 12, 13, 14], "when": [0, 12, 14], "through": [0, 5, 6, 7, 8, 9, 13], "commun": 0, "medium": 0, "media": 0, "wire": 0, "wireless": 0, "nois": [0, 7, 9], "delai": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12], "loss": [0, 7, 9], "oper": [0, 7, 9], "come": [0, 8, 9], "default": [0, 1, 2, 5, 6, 7, 9, 12, 15, 16, 17], "bidirect": 0, "It": [0, 15, 16], "support": [0, 1, 2, 16], "fix": 0, "probabl": [0, 7, 9, 17], "time": [0, 1, 2, 5, 6, 8, 9, 12, 15, 16, 17], "advanc": [0, 7], "To": 0, "design": 0, "just": 0, "step": [0, 5, 6, 12], "determin": [0, 1, 2, 17], "part": 0, "If": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17], "need": [0, 14], "creat": [0, 9, 15, 17], "subclass": [0, 1, 2, 5, 6, 7, 9, 13], "simplemodul": [0, 5, 6, 9, 13, 14], "yaml": [0, 14, 16], "file": [0, 1, 2, 14, 15, 16, 17], "call": [0, 5, 6, 7, 8, 9, 12], "list": [0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 16, 17], "all": [0, 5, 6, 8, 9, 12, 14, 15, 16, 17], "class": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "dynam": 0, "load": [0, 14, 17], "engin": [0, 1, 2, 3, 16], "exampl": [0, 17], "name": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17], "clientmodul": 0, "my_packag": 0, "servermodul": 0, "another_packag": 0, "option": [0, 1, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17], "clientservermodul": 0, "type": [0, 17], "client_1": 0, "paramet": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "pass": [0, 5, 6, 7, 8, 9, 12, 16], "constructor": [0, 8, 9, 16], "num_request": 0, "100": 0, "send_rat": 0, "10": [0, 15], "client_2": 0, "150": 0, "8": [0, 17], "server": 0, "service_r": 0, "20": 0, "sourc": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "lan": 0, "format": [0, 1, 2, 14, 15], "module_nam": 0, "port_nam": [0, 5, 6, 7, 8, 9, 12, 13], "target": 0, "lan0": 0, "otherwis": [0, 7, 9], "specifi": [0, 5, 7, 8, 9, 12, 14, 15, 17], "lan1": 0, "describ": [0, 1, 2, 17], "In": [0, 14], "practic": 0, "top": [0, 12], "level": [0, 12, 15, 16], "mynetwork": 0, "client_serv": 0, "yet": 0, "last": 0, "one": [0, 14, 15, 17], "we": 0, "promis": 0, "configur": [0, 1, 2, 9, 13, 14, 16], "repetit": [0, 1, 2, 3, 16], "1": [0, 15, 16, 17], "number": [0, 1, 2, 5, 6, 12, 16, 17], "independ": [0, 1, 2, 16], "run": [0, 1, 2, 12, 16], "num_rng": 0, "50": 0, "random": [0, 1, 2, 17], "gener": [0, 1, 2, 7, 9, 14, 17], "time_unit": [0, 16], "u": [0, 16, 17], "unit": [0, 1, 2, 16, 17], "case": [0, 9, 10, 14, 16], "microsecond": [0, 16, 17], "simulate_until": [0, 16], "1000000": 0, "yaml_directori": [0, 16], "directori": [0, 1, 2, 14, 16], "where": [0, 1, 2, 12], "locat": 0, "rel": [0, 16, 17], "output_dir": [0, 1, 2, 3, 16], "out": [0, 7, 8, 9, 12], "store": [0, 1, 2, 8, 9, 10, 16], "simpi": [0, 3, 16], "onli": [0, 11, 16, 17], "now": 0, "num_process": 0, "parallel": 0, "metric": [0, 1, 2, 3, 9, 13, 16, 17], "collect": [0, 1, 2, 16, 17], "queuing_tim": 0, "vector": [0, 17], "mean": [0, 1, 2, 17], "whole": 0, "sampl": [0, 1, 2, 9, 13, 17], "instanti": [0, 1, 2, 14], "an": [0, 1, 2, 7, 9, 11, 13, 14, 15, 16], "experi": [0, 16], "object": [0, 1, 2, 9, 10, 11, 12, 16, 17], "run_experi": 0, "from": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17], "import": [0, 14], "config_fil": [0, 16], "config": [0, 14, 16], "backend": 0, "connector": [0, 1, 3], "simpy_connector": [0, 1], "ping_pong": [0, 4], "front_end": 0, "compoundmodul": [0, 8, 9, 14], "compound_modul": [0, 9, 14], "sim_ent": [0, 9], "simple_modul": [0, 9], "parser": 0, "instantiate_compound_modul": [0, 14], "parse_channel": [0, 14], "parse_connect": [0, 14], "parse_simple_modul": [0, 14], "parse_yaml_directori": [0, 14], "parse_yaml_fil": [0, 14], "sanitize_compound_descriptor": [0, 14], "sim_log": 0, "critic": [0, 15], "debug": [0, 15], "error": [0, 15], "info": [0, 15, 16], "log_to_consol": [0, 15, 16], "log_to_fil": [0, 15], "remove_console_log": [0, 15], "set_log_level": [0, 15, 16], "warn": [0, 15], "util": 0, "futuremetr": [0, 1, 2, 16, 17], "multirandom": [0, 1, 2, 17], "get_metr": [0, 17], "get_metrics_from_csv": [0, 17], "time_unit_factor": [0, 16, 17], "index": [0, 1, 2, 8, 9, 12, 16, 17], "search": 0, "page": 0, "omnetpupi": 1, "sub": [1, 8, 9], "packag": [1, 4, 9, 14, 17], "respons": 1, "api": [1, 15], "front": [1, 9], "end": [1, 9], "provid": [1, 2, 14, 17], "necessari": [1, 9], "tool": [1, 9, 14], "__init__": [1, 5, 9], "none": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17], "0": [1, 2, 3, 5, 6, 12, 15, 17], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "abc": [1, 2], "interfac": [1, 2, 11], "abstract": [1, 2, 9, 13], "meant": [1, 2, 13], "specif": [1, 2, 15], "A": [1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "record": [1, 2, 9, 13], "dure": [1, 2, 17], "str": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17], "data": [1, 2, 14, 16, 17], "which": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 16], "int": [1, 2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17], "attribut": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16], "context": [1, 2, 5, 6, 9, 12, 13, 14], "add_ent": [1, 2, 3], "add": [1, 2, 8, 9], "simulatedent": [1, 2, 7, 8, 9, 11, 12, 13], "ad": [1, 2, 8, 9, 12, 15], "cancel_schedul": [1, 2, 3, 8, 9, 12], "cancel": [1, 2, 8, 9, 12], "schedul": [1, 2, 5, 6, 8, 9, 12, 13], "self": [1, 2, 5, 6, 8, 9, 12, 13], "noth": [1, 2, 7, 9, 11], "happen": [1, 2], "dump_metr": [1, 2], "dump": [1, 2], "temporari": [1, 2], "get_tim": [1, 2, 3], "return": [1, 2, 7, 8, 9, 14, 15, 16, 17], "current": [1, 2, 8, 9, 12, 14, 15, 16, 17], "is_schedul": [1, 2, 3, 8, 9, 12], "check": [1, 2, 8, 9, 12], "should": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15], "receiv": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13], "multipl": [1, 2, 17], "stream": [1, 2], "power": [1, 2], "seed": [1, 2, 16, 17], "record_metr": [1, 2], "valu": [1, 2, 9, 13, 17], "float": [1, 2, 7, 8, 9, 12, 15, 16, 17], "dict": [1, 2, 8, 9, 10, 12, 14, 16, 17], "csv": [1, 2], "turn": [1, 2], "string": [1, 2, 15, 17], "under": [1, 2], "column": [1, 2], "schedule_port_input": [1, 2, 3], "schedule_self_messag": [1, 2, 3, 8, 9, 12], "start_simul": [1, 2, 3], "until": [1, 2, 3, 16], "start": [1, 2, 16], "stop": [1, 2], "more": [1, 2, 7, 9, 16], "simpyconnector": [1, 3], "set": [2, 4, 8, 9, 12, 13, 15, 16, 17], "function": [2, 14, 16, 17], "remov": [2, 15], "manag": 2, "test": 4, "learn": 4, "pingpongmodul": [4, 5, 6], "ping_pong_simpl": [4, 5], "toi": 5, "ping": [5, 6], "pong": [5, 6], "protocol": 5, "consist": 5, "pingmodul": 5, "pongmodul": 5, "fashion": 5, "back": 5, "repeat": 5, "identifi": [5, 6, 7, 8, 9, 12, 13, 14, 15], "5": [5, 6, 12, 17], "same": [5, 6, 8, 9, 11, 13], "except": [5, 6, 8, 9, 11, 14], "first": [5, 6, 7, 9, 14, 17], "differenti": [5, 6], "handl": [5, 6, 7, 9, 13], "initi": [5, 6, 12, 14], "either": [5, 6], "uniqu": [5, 6, 7, 8, 9, 11, 12, 13, 14, 17], "second": [5, 6, 16, 17], "must": [5, 6, 9, 12, 13], "everi": [5, 6, 9, 11, 12, 13], "wa": [5, 6, 7, 8, 9, 12, 13, 14], "right": [5, 6, 12], "befor": [5, 6, 12], "begin": [5, 6, 12], "automat": [5, 6, 7, 9, 12], "onc": [5, 6, 12], "4": [5, 6, 12, 15, 17], "allow": [5, 6, 12, 17], "perform": [5, 6, 12], "action": [5, 6, 9, 12, 13], "synchron": [5, 6, 12], "ha": [5, 6, 12, 13, 14, 16], "guarante": [5, 6, 12], "previou": [5, 6, 12], "have": [5, 6, 7, 8, 9, 11, 12], "alreadi": [5, 6, 8, 9, 11, 12, 14, 15], "been": [5, 6, 12], "execut": [5, 6, 12], "loss_prob": [7, 9], "appli": [7, 9], "travel": [7, 9], "alwai": [7, 9], "b": [7, 8, 9, 13, 17], "vice": [7, 9, 11], "versa": [7, 9, 11], "after": [7, 9], "overrid": [7, 9], "process_messag": [7, 9], "asymmetr": [7, 9], "apply_loss": [7, 9], "arbitrari": [7, 8, 9], "distribut": [7, 9, 17], "bool": [7, 9, 11, 12], "true": [7, 9], "lost": [7, 9], "fals": [7, 9], "generate_delai": [7, 9], "zero": [7, 9], "sent": [7, 8, 9, 11, 12], "immedi": [7, 9], "final": [7, 9], "By": [7, 9], "doe": [7, 9, 11], "drop": [7, 9], "do": [8, 9], "organ": [8, 9], "Their": [8, 9], "intrins": [8, 9], "compund": 8, "semant": [8, 11, 13], "kwarg": [8, 9], "repres": [8, 9, 10, 11, 13, 16], "see": [8, 9, 11, 13, 16], "inherit": [8, 9, 13], "addit": [8, 9, 10, 15], "keyword": [8, 9], "argument": [8, 9], "sub_modul": [8, 9], "add_sub_modul": [8, 9], "rais": [8, 9, 11, 14, 16], "exist": [8, 9], "intern": [8, 9, 12, 17], "local_port": [8, 9, 13], "remote_ent": [8, 9, 13], "remote_port": [8, 9, 13], "remot": [8, 9, 11, 13], "local": [8, 9, 13], "made": [8, 9, 13], "ani": [8, 9, 11, 12, 13, 17], "forward_input": [8, 9, 11], "port_contain": [8, 9], "port_submodul": [8, 9], "forward_output": [8, 9, 11], "get_sub_modul": [8, 9], "get": [8, 9], "retriev": [8, 9], "given": [8, 9], "itself": [8, 9, 11, 12], "schedule_messag": [8, 9, 12], "tx_output": [8, 9, 11, 12], "own": 9, "field": [9, 10, 17], "meta": [9, 10], "wrapper": [9, 10, 17], "metadata": [9, 10], "typic": [9, 10], "header": [9, 10], "edit": [9, 10], "incom": [9, 12, 13], "fed": [9, 11, 13], "up": [9, 13], "intermedi": [9, 13], "emit_metr": [9, 13], "parent": [11, 12], "e": 11, "belong": [11, 12], "connected_port": 11, "forwarded_input_port": 11, "forwarded_output_port": 11, "subscribed_port": 11, "subscrib": 11, "copi": 11, "is_subscrib": 11, "flag": [11, 12], "indic": [11, 12, 17], "whether": [11, 12], "subscribe_to": 11, "valueerror": [11, 14], "disconnect": 11, "third": 11, "mutual": 11, "tx_input": 11, "activ": [12, 15], "mai": 12, "keep": 12, "refer": 12, "sim_context": [12, 14], "is_listen": 12, "listen": 12, "set_sim_context": 12, "homonym": 13, "pars": [14, 16], "topologi": 14, "module_class": 14, "channel_class": 14, "compound_descriptor": 14, "next_module_id": 14, "next_channel_id": 14, "descriptor": 14, "recurs": 14, "inner": 14, "next": [14, 17], "tupl": [14, 16, 17], "instanc": 14, "new": [14, 15], "found": 14, "channel_descriptor": 14, "raw": 14, "dictionari": [14, 16, 17], "connection_data": 14, "invalid": 14, "simple_descriptor": 14, "kei": [14, 16], "directory_path": 14, "order": 14, "below": 14, "path": [14, 16], "filenotfounderror": 14, "mandatori": 14, "miss": 14, "depend": 14, "loop": 14, "file_path": 14, "directli": [14, 16], "sanit": 14, "ensur": 14, "would": 14, "caus": 14, "endless": 14, "detect": 14, "log": [15, 16], "module_id": 15, "logger": 15, "becaus": [15, 17], "present": 15, "entri": 15, "stdout": 15, "consol": 15, "streamhandl": 15, "handler": 15, "filenam": [15, 17], "open": 15, "append": 15, "mode": [15, 17], "filehandl": 15, "2": [15, 17], "3": [15, 17], "global": 16, "variabl": 16, "friendli": 16, "absolut": 16, "work": 16, "rigid": 16, "seed_set": 16, "length": [16, 17], "rngs_per_rep": 16, "moment": 16, "empti": [16, 17], "long": 16, "log_level": 16, "simulations_param": 16, "element": [16, 17], "global_param": 16, "avail": 16, "run_simul": 16, "match": 16, "notimplementederror": 16, "properti": 16, "factor": [16, 17], "convert": [16, 17], "across": 17, "median": 17, "std": 17, "var": 17, "min": 17, "max": 17, "count": 17, "percentil": 17, "apart": 17, "boolean": 17, "statist": 17, "Such": 17, "complet": 17, "standard": 17, "deviat": 17, "varianc": 17, "minimum": 17, "maximum": 17, "25": 17, "75": 17, "95": 17, "99": 17, "alia": 17, "7": 17, "6": 17, "9": 17, "44": 17, "around": 17, "librari": 17, "singl": 17, "integ": 17, "betavari": 17, "alpha": 17, "beta": 17, "point": 17, "n": 17, "shape": 17, "posit": 17, "choic": 17, "seq": 17, "sequenc": 17, "iter": 17, "weight": 17, "cum_weight": 17, "k": 17, "size": 17, "chosen": 17, "popul": 17, "replac": 17, "select": 17, "assum": 17, "equal": 17, "cumul": 17, "choos": 17, "expovari": 17, "lambd": 17, "normal": 17, "gaussian": 17, "rate": 17, "exponenti": 17, "gammavari": 17, "gamma": 17, "scale": 17, "gauss": 17, "mu": 17, "sigma": 17, "geometr": 17, "p": 17, "numpi": 17, "instead": 17, "success": 17, "getstat": 17, "state": 17, "lognormvari": 17, "lognorm": 17, "normalvari": 17, "paretovari": 17, "pareto": 17, "parentovari": 17, "randint": 17, "lower": 17, "bound": 17, "upper": 17, "uniformli": 17, "rang": 17, "setstat": 17, "shuffl": 17, "x": 17, "place": 17, "triangular": 17, "low": 17, "high": 17, "midpoint": 17, "uniform": 17, "vonmisesvari": 17, "kappa": 17, "von": 17, "mise": 17, "concentr": 17, "weibullvari": 17, "weibul": 17, "df": 17, "comput": 17, "Not": 17, "version": 17, "requir": 17, "memori": 17, "panda": 17, "datafram": 17, "request": 17, "For": 17, "m": 17, "1e": 17, "millisecond": 17, "nanosecond": 17}, "objects": {"omnetpypy.backends": [[1, 0, 0, "-", "__init__"], [2, 0, 0, "-", "connector"], [3, 0, 0, "-", "simpy_connector"]], "omnetpypy.backends.__init__": [[1, 1, 1, "", "Connector"]], "omnetpypy.backends.__init__.Connector": [[1, 2, 1, "", "add_entity"], [1, 2, 1, "", "cancel_scheduled"], [1, 2, 1, "", "dump_metric"], [1, 2, 1, "", "get_time"], [1, 2, 1, "", "is_scheduled"], [1, 2, 1, "", "random"], [1, 2, 1, "", "record_metric"], [1, 2, 1, "", "schedule_port_input"], [1, 2, 1, "", "schedule_self_message"], [1, 2, 1, "", "start_simulation"]], "omnetpypy.backends.connector": [[2, 1, 1, "", "Connector"]], "omnetpypy.backends.connector.Connector": [[2, 2, 1, "", "add_entity"], [2, 2, 1, "", "cancel_scheduled"], [2, 2, 1, "", "dump_metric"], [2, 2, 1, "", "get_time"], [2, 2, 1, "", "is_scheduled"], [2, 2, 1, "", "random"], [2, 2, 1, "", "record_metric"], [2, 2, 1, "", "schedule_port_input"], [2, 2, 1, "", "schedule_self_message"], [2, 2, 1, "", "start_simulation"]], "omnetpypy.backends.simpy_connector": [[3, 1, 1, "", "SimPyConnector"]], "omnetpypy.backends.simpy_connector.SimPyConnector": [[3, 2, 1, "", "add_entity"], [3, 2, 1, "", "cancel_scheduled"], [3, 2, 1, "", "get_time"], [3, 2, 1, "", "is_scheduled"], [3, 2, 1, "", "schedule_port_input"], [3, 2, 1, "", "schedule_self_message"], [3, 2, 1, "", "start_simulation"]], "omnetpypy.examples": [[4, 0, 0, "-", "__init__"]], "omnetpypy.examples.ping_pong": [[5, 0, 0, "-", "__init__"], [6, 0, 0, "-", "ping_pong_simple"]], "omnetpypy.examples.ping_pong.__init__": [[5, 1, 1, "", "PingPongModule"]], "omnetpypy.examples.ping_pong.__init__.PingPongModule": [[5, 2, 1, "", "handle_message"], [5, 2, 1, "", "initialize"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, 1, 1, "", "PingPongModule"]], "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule": [[6, 2, 1, "", "handle_message"], [6, 2, 1, "", "initialize"]], "omnetpypy.front_end": [[9, 0, 0, "-", "__init__"], [7, 0, 0, "-", "channel"], [8, 0, 0, "-", "compound_module"], [10, 0, 0, "-", "message"], [11, 0, 0, "-", "port"], [12, 0, 0, "-", "sim_entity"], [13, 0, 0, "-", "simple_module"]], "omnetpypy.front_end.__init__": [[9, 1, 1, "", "Channel"], [9, 1, 1, "", "CompoundModule"], [9, 1, 1, "", "Message"], [9, 1, 1, "", "SimpleModule"]], "omnetpypy.front_end.__init__.Channel": [[9, 2, 1, "", "apply_loss"], [9, 2, 1, "", "generate_delay"], [9, 2, 1, "", "handle_message"], [9, 2, 1, "", "process_message"]], "omnetpypy.front_end.__init__.CompoundModule": [[9, 2, 1, "", "add_sub_module"], [9, 2, 1, "", "cancel_scheduled"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "forward_input"], [9, 2, 1, "", "forward_output"], [9, 2, 1, "", "get_sub_module"], [9, 2, 1, "", "handle_message"], [9, 2, 1, "", "is_scheduled"], [9, 2, 1, "", "schedule_message"], [9, 2, 1, "", "send"]], "omnetpypy.front_end.__init__.SimpleModule": [[9, 2, 1, "", "connect"], [9, 2, 1, "", "emit_metric"], [9, 2, 1, "", "handle_message"]], "omnetpypy.front_end.channel": [[7, 1, 1, "", "Channel"]], "omnetpypy.front_end.channel.Channel": [[7, 2, 1, "", "apply_loss"], [7, 2, 1, "", "generate_delay"], [7, 2, 1, "", "handle_message"], [7, 2, 1, "", "process_message"]], "omnetpypy.front_end.compound_module": [[8, 1, 1, "", "CompoundModule"]], "omnetpypy.front_end.compound_module.CompoundModule": [[8, 2, 1, "", "add_sub_module"], [8, 2, 1, "", "cancel_scheduled"], [8, 2, 1, "", "connect"], [8, 2, 1, "", "forward_input"], [8, 2, 1, "", "forward_output"], [8, 2, 1, "", "get_sub_module"], [8, 2, 1, "", "handle_message"], [8, 2, 1, "", "is_scheduled"], [8, 2, 1, "", "schedule_message"], [8, 2, 1, "", "send"]], "omnetpypy.front_end.message": [[10, 1, 1, "", "Message"]], "omnetpypy.front_end.port": [[11, 1, 1, "", "Port"]], "omnetpypy.front_end.port.Port": [[11, 2, 1, "", "connect"], [11, 2, 1, "", "disconnect"], [11, 2, 1, "", "forward_input"], [11, 2, 1, "", "forward_output"], [11, 2, 1, "", "subscribe_to"], [11, 2, 1, "", "tx_input"], [11, 2, 1, "", "tx_output"]], "omnetpypy.front_end.sim_entity": [[12, 1, 1, "", "SimulatedEntity"]], "omnetpypy.front_end.sim_entity.SimulatedEntity": [[12, 2, 1, "", "cancel_scheduled"], [12, 2, 1, "", "handle_message"], [12, 2, 1, "", "initialize"], [12, 2, 1, "", "is_scheduled"], [12, 2, 1, "", "schedule_message"], [12, 2, 1, "", "send"], [12, 2, 1, "", "set_sim_context"]], "omnetpypy.front_end.simple_module": [[13, 1, 1, "", "SimpleModule"]], "omnetpypy.front_end.simple_module.SimpleModule": [[13, 2, 1, "", "connect"], [13, 2, 1, "", "emit_metric"], [13, 2, 1, "", "handle_message"]], "omnetpypy": [[14, 0, 0, "-", "parser"], [15, 0, 0, "-", "sim_log"], [16, 0, 0, "-", "simulation"], [17, 0, 0, "-", "utilities"]], "omnetpypy.parser": [[14, 3, 1, "", "instantiate_compound_module"], [14, 3, 1, "", "parse_channels"], [14, 3, 1, "", "parse_connection"], [14, 3, 1, "", "parse_simple_modules"], [14, 3, 1, "", "parse_yaml_directory"], [14, 3, 1, "", "parse_yaml_file"], [14, 3, 1, "", "sanitize_compound_descriptors"]], "omnetpypy.sim_log": [[15, 3, 1, "", "critical"], [15, 3, 1, "", "debug"], [15, 3, 1, "", "error"], [15, 3, 1, "", "info"], [15, 3, 1, "", "log_to_console"], [15, 3, 1, "", "log_to_file"], [15, 3, 1, "", "remove_console_log"], [15, 3, 1, "", "set_log_level"], [15, 3, 1, "", "warning"]], "omnetpypy.simulation": [[16, 1, 1, "", "Experiment"], [16, 1, 1, "", "Simulation"]], "omnetpypy.simulation.Experiment": [[16, 2, 1, "", "run_simulations"]], "omnetpypy.simulation.Simulation": [[16, 2, 1, "", "start"], [16, 2, 1, "", "time"], [16, 4, 1, "", "time_unit_factor"]], "omnetpypy.utilities": [[17, 1, 1, "", "FutureMetric"], [17, 1, 1, "", "MultiRandom"], [17, 3, 1, "", "get_metrics"], [17, 3, 1, "", "get_metrics_from_csv"], [17, 3, 1, "", "time_unit_factor"]], "omnetpypy.utilities.FutureMetric": [[17, 5, 1, "", "count"], [17, 5, 1, "", "max"], [17, 5, 1, "", "mean"], [17, 5, 1, "", "median"], [17, 5, 1, "", "min"], [17, 5, 1, "", "name"], [17, 5, 1, "", "percentiles"], [17, 5, 1, "", "std"], [17, 5, 1, "", "var"], [17, 5, 1, "", "vector"]], "omnetpypy.utilities.MultiRandom": [[17, 2, 1, "", "betavariate"], [17, 2, 1, "", "choice"], [17, 2, 1, "", "choices"], [17, 2, 1, "", "expovariate"], [17, 2, 1, "", "gammavariate"], [17, 2, 1, "", "gauss"], [17, 2, 1, "", "geometric"], [17, 2, 1, "", "getstate"], [17, 2, 1, "", "lognormvariate"], [17, 2, 1, "", "normalvariate"], [17, 2, 1, "", "paretovariate"], [17, 2, 1, "", "randint"], [17, 2, 1, "", "random"], [17, 2, 1, "", "sample"], [17, 2, 1, "", "setstate"], [17, 2, 1, "", "shuffle"], [17, 2, 1, "", "triangular"], [17, 2, 1, "", "uniform"], [17, 2, 1, "", "vonmisesvariate"], [17, 2, 1, "", "weibullvariate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"omnetpypi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "packag": 0, "doc": 0, "content": 0, "indic": 0, "tabl": 0, "backend": [1, 2, 3], "modul": [1, 4, 5, 9], "connector": 2, "simpy_connector": 3, "exampl": [4, 5, 6], "ping_pong": [5, 6], "ping_pong_simpl": 6, "front_end": [7, 8, 9, 10, 11, 12, 13], "channel": 7, "compound_modul": 8, "messag": 10, "port": 11, "sim_ent": 12, "simple_modul": 13, "parser": 14, "sim_log": 15, "simul": 16, "util": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"omnetpypy package docs": [[0, "omnetpypy-package-docs"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "omnetpypy.backends": [[1, "module-omnetpypy.backends.__init__"]], "Modules:": [[1, null], [4, null], [5, null], [9, null]], "omnetpypy.backends.connector": [[2, "module-omnetpypy.backends.connector"]], "omnetpypy.backends.simpy_connector": [[3, "module-omnetpypy.backends.simpy_connector"]], "omnetpypy.examples": [[4, "module-omnetpypy.examples.__init__"]], "omnetpypy.examples.ping_pong": [[5, "module-omnetpypy.examples.ping_pong.__init__"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"]], "omnetpypy.front_end.channel": [[7, "module-omnetpypy.front_end.channel"]], "omnetpypy.front_end.compound_module": [[8, "module-omnetpypy.front_end.compound_module"]], "omnetpypy.front_end": [[9, "module-omnetpypy.front_end.__init__"]], "omnetpypy.front_end.message": [[10, "module-omnetpypy.front_end.message"]], "omnetpypy.front_end.port": [[11, "module-omnetpypy.front_end.port"]], "omnetpypy.front_end.sim_entity": [[12, "module-omnetpypy.front_end.sim_entity"]], "omnetpypy.front_end.simple_module": [[13, "module-omnetpypy.front_end.simple_module"]], "omnetpypy.parser": [[14, "module-omnetpypy.parser"]], "omnetpypy.sim_log": [[15, "module-omnetpypy.sim_log"]], "omnetpypy.simulation": [[16, "module-omnetpypy.simulation"]], "omnetpypy.utilities": [[17, "module-omnetpypy.utilities"]]}, "indexentries": {"connector (class in omnetpypy.backends.__init__)": [[1, "omnetpypy.backends.__init__.Connector"]], "add_entity() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.cancel_scheduled"]], "dump_metric() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.dump_metric"]], "get_time() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.get_time"]], "is_scheduled() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.is_scheduled"]], "module": [[1, "module-omnetpypy.backends.__init__"], [2, "module-omnetpypy.backends.connector"], [3, "module-omnetpypy.backends.simpy_connector"], [4, "module-omnetpypy.examples.__init__"], [5, "module-omnetpypy.examples.ping_pong.__init__"], [6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"], [7, "module-omnetpypy.front_end.channel"], [8, "module-omnetpypy.front_end.compound_module"], [9, "module-omnetpypy.front_end.__init__"], [10, "module-omnetpypy.front_end.message"], [11, "module-omnetpypy.front_end.port"], [12, "module-omnetpypy.front_end.sim_entity"], [13, "module-omnetpypy.front_end.simple_module"], [14, "module-omnetpypy.parser"], [15, "module-omnetpypy.sim_log"], [16, "module-omnetpypy.simulation"], [17, "module-omnetpypy.utilities"]], "omnetpypy.backends.__init__": [[1, "module-omnetpypy.backends.__init__"]], "random() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.random"]], "record_metric() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.record_metric"]], "schedule_port_input() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.__init__.connector method)": [[1, "omnetpypy.backends.__init__.Connector.start_simulation"]], "connector (class in omnetpypy.backends.connector)": [[2, "omnetpypy.backends.connector.Connector"]], "add_entity() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.cancel_scheduled"]], "dump_metric() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.dump_metric"]], "get_time() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.get_time"]], "is_scheduled() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.is_scheduled"]], "omnetpypy.backends.connector": [[2, "module-omnetpypy.backends.connector"]], "random() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.random"]], "record_metric() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.record_metric"]], "schedule_port_input() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.connector.connector method)": [[2, "omnetpypy.backends.connector.Connector.start_simulation"]], "simpyconnector (class in omnetpypy.backends.simpy_connector)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector"]], "add_entity() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.add_entity"]], "cancel_scheduled() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.cancel_scheduled"]], "get_time() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.get_time"]], "is_scheduled() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.is_scheduled"]], "omnetpypy.backends.simpy_connector": [[3, "module-omnetpypy.backends.simpy_connector"]], "schedule_port_input() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.schedule_port_input"]], "schedule_self_message() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.schedule_self_message"]], "start_simulation() (omnetpypy.backends.simpy_connector.simpyconnector method)": [[3, "omnetpypy.backends.simpy_connector.SimPyConnector.start_simulation"]], "omnetpypy.examples.__init__": [[4, "module-omnetpypy.examples.__init__"]], "pingpongmodule (class in omnetpypy.examples.ping_pong.__init__)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule"]], "handle_message() (omnetpypy.examples.ping_pong.__init__.pingpongmodule method)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule.handle_message"]], "initialize() (omnetpypy.examples.ping_pong.__init__.pingpongmodule method)": [[5, "omnetpypy.examples.ping_pong.__init__.PingPongModule.initialize"]], "omnetpypy.examples.ping_pong.__init__": [[5, "module-omnetpypy.examples.ping_pong.__init__"]], "pingpongmodule (class in omnetpypy.examples.ping_pong.ping_pong_simple)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule"]], "handle_message() (omnetpypy.examples.ping_pong.ping_pong_simple.pingpongmodule method)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule.handle_message"]], "initialize() (omnetpypy.examples.ping_pong.ping_pong_simple.pingpongmodule method)": [[6, "omnetpypy.examples.ping_pong.ping_pong_simple.PingPongModule.initialize"]], "omnetpypy.examples.ping_pong.ping_pong_simple": [[6, "module-omnetpypy.examples.ping_pong.ping_pong_simple"]], "channel (class in omnetpypy.front_end.channel)": [[7, "omnetpypy.front_end.channel.Channel"]], "apply_loss() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.apply_loss"]], "generate_delay() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.generate_delay"]], "handle_message() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.handle_message"]], "omnetpypy.front_end.channel": [[7, "module-omnetpypy.front_end.channel"]], "process_message() (omnetpypy.front_end.channel.channel method)": [[7, "omnetpypy.front_end.channel.Channel.process_message"]], "compoundmodule (class in omnetpypy.front_end.compound_module)": [[8, "omnetpypy.front_end.compound_module.CompoundModule"]], "add_sub_module() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.add_sub_module"]], "cancel_scheduled() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.cancel_scheduled"]], "connect() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.connect"]], "forward_input() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.forward_input"]], "forward_output() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.forward_output"]], "get_sub_module() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.get_sub_module"]], "handle_message() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.handle_message"]], "is_scheduled() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.is_scheduled"]], "omnetpypy.front_end.compound_module": [[8, "module-omnetpypy.front_end.compound_module"]], "schedule_message() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.schedule_message"]], "send() (omnetpypy.front_end.compound_module.compoundmodule method)": [[8, "omnetpypy.front_end.compound_module.CompoundModule.send"]], "channel (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.Channel"]], "compoundmodule (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.CompoundModule"]], "message (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.Message"]], "simplemodule (class in omnetpypy.front_end.__init__)": [[9, "omnetpypy.front_end.__init__.SimpleModule"]], "add_sub_module() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.add_sub_module"]], "apply_loss() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.apply_loss"]], "cancel_scheduled() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.cancel_scheduled"]], "connect() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.connect"]], "connect() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.connect"]], "emit_metric() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.emit_metric"]], "forward_input() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.forward_input"]], "forward_output() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.forward_output"]], "generate_delay() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.generate_delay"]], "get_sub_module() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.get_sub_module"]], "handle_message() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.handle_message"]], "handle_message() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.handle_message"]], "handle_message() (omnetpypy.front_end.__init__.simplemodule method)": [[9, "omnetpypy.front_end.__init__.SimpleModule.handle_message"]], "is_scheduled() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.is_scheduled"]], "omnetpypy.front_end.__init__": [[9, "module-omnetpypy.front_end.__init__"]], "process_message() (omnetpypy.front_end.__init__.channel method)": [[9, "omnetpypy.front_end.__init__.Channel.process_message"]], "schedule_message() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.schedule_message"]], "send() (omnetpypy.front_end.__init__.compoundmodule method)": [[9, "omnetpypy.front_end.__init__.CompoundModule.send"]], "message (class in omnetpypy.front_end.message)": [[10, "omnetpypy.front_end.message.Message"]], "omnetpypy.front_end.message": [[10, "module-omnetpypy.front_end.message"]], "port (class in omnetpypy.front_end.port)": [[11, "omnetpypy.front_end.port.Port"]], "connect() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.connect"]], "disconnect() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.disconnect"]], "forward_input() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.forward_input"]], "forward_output() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.forward_output"]], "omnetpypy.front_end.port": [[11, "module-omnetpypy.front_end.port"]], "subscribe_to() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.subscribe_to"]], "tx_input() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.tx_input"]], "tx_output() (omnetpypy.front_end.port.port method)": [[11, "omnetpypy.front_end.port.Port.tx_output"]], "simulatedentity (class in omnetpypy.front_end.sim_entity)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity"]], "cancel_scheduled() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.cancel_scheduled"]], "handle_message() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.handle_message"]], "initialize() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.initialize"]], "is_scheduled() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.is_scheduled"]], "omnetpypy.front_end.sim_entity": [[12, "module-omnetpypy.front_end.sim_entity"]], "schedule_message() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.schedule_message"]], "send() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.send"]], "set_sim_context() (omnetpypy.front_end.sim_entity.simulatedentity method)": [[12, "omnetpypy.front_end.sim_entity.SimulatedEntity.set_sim_context"]], "simplemodule (class in omnetpypy.front_end.simple_module)": [[13, "omnetpypy.front_end.simple_module.SimpleModule"]], "connect() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.connect"]], "emit_metric() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.emit_metric"]], "handle_message() (omnetpypy.front_end.simple_module.simplemodule method)": [[13, "omnetpypy.front_end.simple_module.SimpleModule.handle_message"]], "omnetpypy.front_end.simple_module": [[13, "module-omnetpypy.front_end.simple_module"]], "instantiate_compound_module() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.instantiate_compound_module"]], "omnetpypy.parser": [[14, "module-omnetpypy.parser"]], "parse_channels() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_channels"]], "parse_connection() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_connection"]], "parse_simple_modules() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_simple_modules"]], "parse_yaml_directory() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_yaml_directory"]], "parse_yaml_file() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.parse_yaml_file"]], "sanitize_compound_descriptors() (in module omnetpypy.parser)": [[14, "omnetpypy.parser.sanitize_compound_descriptors"]], "critical() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.critical"]], "debug() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.debug"]], "error() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.error"]], "info() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.info"]], "log_to_console() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.log_to_console"]], "log_to_file() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.log_to_file"]], "omnetpypy.sim_log": [[15, "module-omnetpypy.sim_log"]], "remove_console_log() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.remove_console_log"]], "set_log_level() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.set_log_level"]], "warning() (in module omnetpypy.sim_log)": [[15, "omnetpypy.sim_log.warning"]], "experiment (class in omnetpypy.simulation)": [[16, "omnetpypy.simulation.Experiment"]], "simulation (class in omnetpypy.simulation)": [[16, "omnetpypy.simulation.Simulation"]], "omnetpypy.simulation": [[16, "module-omnetpypy.simulation"]], "run_simulations() (omnetpypy.simulation.experiment method)": [[16, "omnetpypy.simulation.Experiment.run_simulations"]], "start() (omnetpypy.simulation.simulation method)": [[16, "omnetpypy.simulation.Simulation.start"]], "time() (omnetpypy.simulation.simulation method)": [[16, "omnetpypy.simulation.Simulation.time"]], "time_unit_factor (omnetpypy.simulation.simulation property)": [[16, "omnetpypy.simulation.Simulation.time_unit_factor"]], "futuremetric (class in omnetpypy.utilities)": [[17, "omnetpypy.utilities.FutureMetric"]], "multirandom (class in omnetpypy.utilities)": [[17, "omnetpypy.utilities.MultiRandom"]], "betavariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.betavariate"]], "choice() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.choice"]], "choices() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.choices"]], "count (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.count"]], "expovariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.expovariate"]], "gammavariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.gammavariate"]], "gauss() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.gauss"]], "geometric() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.geometric"]], "get_metrics() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.get_metrics"]], "get_metrics_from_csv() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.get_metrics_from_csv"]], "getstate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.getstate"]], "lognormvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.lognormvariate"]], "max (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.max"]], "mean (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.mean"]], "median (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.median"]], "min (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.min"]], "name (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.name"]], "normalvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.normalvariate"]], "omnetpypy.utilities": [[17, "module-omnetpypy.utilities"]], "paretovariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.paretovariate"]], "percentiles (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.percentiles"]], "randint() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.randint"]], "random() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.random"]], "sample() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.sample"]], "setstate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.setstate"]], "shuffle() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.shuffle"]], "std (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.std"]], "time_unit_factor() (in module omnetpypy.utilities)": [[17, "omnetpypy.utilities.time_unit_factor"]], "triangular() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.triangular"]], "uniform() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.uniform"]], "var (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.var"]], "vector (omnetpypy.utilities.futuremetric attribute)": [[17, "omnetpypy.utilities.FutureMetric.vector"]], "vonmisesvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.vonmisesvariate"]], "weibullvariate() (omnetpypy.utilities.multirandom method)": [[17, "omnetpypy.utilities.MultiRandom.weibullvariate"]]}})